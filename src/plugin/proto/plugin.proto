syntax = "proto3";

option go_package = "src/plugin/proto";

package eventrunner.plugin.v1;

// Common

enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_STARTUP = 1;
  STATUS_READY = 3;
  STATUS_ERROR = 4;
  STATUS_SHUTDOWN = 5;
}

enum Result {
  RESULT_UNSPECIFIED = 0;
  RESULT_SUCCESS = 1;
  RESULT_ERROR = 2;
  RESULT_ASYNC = 3;
}

message Metadata {
  string name = 1;
  string value = 2;
}

message Config {
  string name = 1;
  string value = 2;
}


// Plugin

service PluginService {
  rpc Status(StatusReq) returns (StatusRes);
  rpc Command(CommandReq) returns (CommandRes);
  rpc Shutdown(ShutdownReq) returns (ShutdownRes);
  rpc Output(OutputReq) returns (OutputRes);
  rpc StartInput(StartInputReq) returns (StartInputRes);
}

message StatusReq {
}
message StatusRes {
  Status status = 1;
  optional string error = 2;
}

message ShutdownReq {
  optional string wait = 1;
}
message ShutdownRes {
}

message CommandReq {
  string uuid = 1;
  string command = 2;
  optional bytes data = 3;
}
message CommandRes {
  string uuid = 1;
  string command = 2;
  optional bytes data = 3;
  Result result = 4;
}

message OutputReq {
  string uuid = 1;
  string topic = 2;
  repeated Metadata metadata = 3;
  optional bytes data = 4;
}
message OutputRes {
} 

message StartInputReq {
  repeated Config config = 1;
}
message StartInputRes {
}


// App

service AppService {
  rpc Result(ResultReq) returns (ResultRes);
  rpc Input(InputReq) returns (InputRes);
}

message ResultReq {
  string plugin_uuid = 1;
  string uuid = 2;
  string command = 3;
  optional bytes data = 4;
  Result result = 5;
}
message ResultRes {
}

message InputReq {
  string plugin_uuid = 1;
  string uuid = 2;
  string topic = 3;
  repeated Metadata metadata = 4;
  optional bytes data = 5;
}
message InputRes {
}